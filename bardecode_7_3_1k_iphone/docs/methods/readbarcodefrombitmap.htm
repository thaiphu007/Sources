<html>
	<head>
		<LINK href="style.css" type="text/css" rel="StyleSheet"></head>
	<body>
		<p><FONT size="5">ReadBarCodeFromBitmap</FONT>&nbsp;
		</p>
		<P><STRONG>Overview</STRONG>
		</P>
		<P>int STReadBarCodeFromBitmap(void *hBarcode, BITMAP *pBitmap, float resolution, 
			char ***bc, char ***bc_type, short photometric)</P>
		<P>STReadBarCodeFromBitmap scans an bitmap held in memory for barcodes and returns 
			the number of barcodes found or an error number.</P>
		<P>
			<TABLE id="Table1" cellSpacing="1" cellPadding="1" width="100%" border="0">
				<TR>
					<TD>hBarcode</TD>
					<TD>Handle to barcode session.</TD>
				</TR>
				<TR>
					<TD>pBitmap</TD>
					<TD>(input) Pointer to a BITMAP structure (see below)</TD>
				</TR>
				<TR>
					<TD>resolution</TD>
					<TD>
						(input) is the resolution in DPI of the image held in the bitmap.</TD>
				</TR>
				<TR>
					<TD>bc</TD>
					<TD>(output) is a pointer to an array of character strings containing barcodes.</TD>
				</TR>
				<TR>
					<TD>bc_type</TD>
					<TD>(output) is a pointer to an array of character strings containing the barcode 
						types in the bar_codes array.</TD>
				</TR>
				<TR>
					<TD>photometric</TD>
					<TD>(input) is the photometric interpretation for a black and white bitmap. A value 
						of 1 means that a bit of value 1 is black and a value of 0 means that a bit of 
						value 0 is black.</TD>
				</TR>
			</TABLE>
		</P>
		<P><STRONG>BITMAP Structure</STRONG></P>
		<P>typedef struct tagBITMAP
			<BR>
			{<BR>
			int bmType;
			<BR>
			int bmWidth;
			<BR>
			int bmHeight;
			<BR>
			int bmWidthBytes;
			<BR>
			unsigned char bmPlanes;
			<BR>
			unsigned char bmBitsPixel;
			<BR>
			void * bmBits;
			<BR>
			} BITMAP;</P>
		<P>bmType should always be 1.</P>
		<P>bmWidth is the width of the image in pixels. <STRONG>Note that all scan lines in the 
				image must&nbsp;begin on &nbsp;4 byte boundary</STRONG>.&nbsp;For example, 
			if your image is&nbsp;black and white and 1000 pixels wide; then&nbsp;the first 
			scan line will start on byte 0, the second on byte 128, the third on 256 etc.</P>
		<P>bmHeight is the height of the bitmap in pixels.</P>
		<P>bmWidthBytes is the width of a scan lines in bytes.</P>
		<P>bmPlanes should always be 1.</P>
		<P>bmBitsPixel is the number of bits per pixel. Black and white images have a value 
			of 1.</P>
		<P>bmBits is a pointer to the first scan line of the image.</P>
		<P><STRONG>Return Value</STRONG></P>
		<P>A negative number indicates an error (see below), other values inidicate the 
			number of barcodes found in the file.</P>
		<P>
			<TABLE id="Table2" cellSpacing="1" cellPadding="1" width="100%" border="0">
				<TR>
					<TD>ST_ERROR_MULTI_PLANE (-2)</TD>
					<TD>Multiplane images not supported</TD>
				</TR>
				<TR>
					<TD>ST_ERROR_BITS_PER_SAMPLE (-3)</TD>
					<TD>Unsupported number of bits per sample</TD>
				</TR>
				<TR>
					<TD>ST_ERROR_MALLOC (-4)</TD>
					<TD>Memory allocation error</TD>
				</TR>
				<TR>
					<TD>ST_ERROR_COLOR_TIFF (-5)</TD>
					<TD>Unsupported compression</TD>
				</TR>
			</TABLE>
		</P>
		<P>&nbsp;</P>
	</body>
</html>

